{
	"info": {
		"_postman_id": "38b73863-43c9-4a67-b880-04ce4511df27",
		"name": "Auto24",
		"description": "author and book API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Books",
			"item": [
				{
					"name": "Create a book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"title1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/book/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"book",
								"create"
							]
						},
						"description": "insert a new book and you should add a title in body request"
					},
					"response": []
				},
				{
					"name": "update a book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"title1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/book/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"book",
								"update"
							]
						},
						"description": "update existing book and you should add book_id in URL and title in body request"
					},
					"response": []
				},
				{
					"name": "book list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/book/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"book",
								"list"
							]
						},
						"description": "this end point return list of existing books"
					},
					"response": []
				},
				{
					"name": "delete book",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/book/delete/{book_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"book",
								"delete",
								"{book_id}"
							]
						},
						"description": "you need a book_id as a query param in URL to delete a book"
					},
					"response": []
				}
			],
			"description": "In Books collection you have 4 endpoints and in body you can check the example to test"
		},
		{
			"name": "author",
			"item": [
				{
					"name": "Create a author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"abdou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/author/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"author",
								"create"
							]
						},
						"description": "insert a new author and you should add a name in body request"
					},
					"response": []
				},
				{
					"name": "Update a author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"abdou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/author/update/{author_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"author",
								"update",
								"{author_id}"
							]
						},
						"description": "update existing author and you should add author_id in URL and title in body request"
					},
					"response": []
				},
				{
					"name": "author list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"test.email@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/author/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"author",
								"list"
							]
						},
						"description": "this end point return list of existing authors"
					},
					"response": []
				},
				{
					"name": "delete author",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/author/delete/{author_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"author",
								"delete",
								"{author_id}"
							]
						},
						"description": "you need a author_id as a query param in URL to delete a author"
					},
					"response": []
				}
			]
		},
		{
			"name": "author_to_book",
			"item": [
				{
					"name": "AssignBookToAuthor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"author_id\": 8,\r\n    \"book_id\":3\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/assign",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"assign"
							]
						},
						"description": "to assign a book to his other you can do this by posting the author_id and book_id"
					},
					"response": []
				},
				{
					"name": "get list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"test.email@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"list"
							]
						},
						"description": "return array of objects and each object hold an author and his own books"
					},
					"response": []
				},
				{
					"name": "getOne",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"test.email@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/{author_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"{author_id}"
							]
						},
						"description": "need a query param in url and return an object of author with book list"
					},
					"response": []
				}
			]
		}
	]
}